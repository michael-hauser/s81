services:
  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://kafka:9093
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093,CONTROLLER://0.0.0.0:9094
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9094"
      CLUSTER_ID: "7837c939014d4606b7e1a8dce344dd95"
    ports:
      - "9092:9092"
      - "9093:9093"
      - "9094:9094"
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - kafka-network

  init-kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      apt-get update && apt-get install -y jq  # Install jq or any necessary packages
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9093 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9093 --create --if-not-exists --topic subway-a --replication-factor 3 --partitions 1
      kafka-topics --bootstrap-server kafka:9093 --create --if-not-exists --topic subway-b --replication-factor 3 --partitions 1
      kafka-topics --bootstrap-server kafka:9093 --create --if-not-exists --topic subway-c --replication-factor 3 --partitions 1
      kafka-topics --bootstrap-server kafka:9093 --create --if-not-exists --topic weather-data --replication-factor 3 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9093 --list
      "
    networks:
      - kafka-network

  kafka-ui:
    image: provectuslabs/kafka-ui
    depends_on:
      - kafka
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: "local"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"
    ports:
      - "8080:8080"
    networks:
      - kafka-network

  subway-producer:
    build:
      context: ./subway-producer
    environment:
      KAFKA_URL: kafka:9092
    depends_on:
      - kafka
    networks:
      - kafka-network

  weather-producer:
    build:
      context: ./weather-producer
    environment:
      KAFKA_URL: kafka:9092
    env_file:
      - ./weather-producer/.env
    depends_on:
      - kafka
    networks:
      - kafka-network

  websocket-server:
    build:
      context: ./websocket-server
    environment:
      KAFKA_URL: kafka:9092
      WS_PORT: 8081
    ports:
      - "8081:8081"
    depends_on:
      - kafka
      - subway-producer
      - weather-producer
    networks:
      - kafka-network
  
  s81app:
    build:
      context: ./s81app
    ports:
      - "3000:3000"
    depends_on:
      - kafka
      - websocket-server
    networks:
      - kafka-network

  s81nativeApp:
    build:
      context: ./s81nativeApp
    ports:
      - "19000:19000"
      - "19001:19001"
      - "19002:19002"
      - "19006:19006"
    depends_on:
      - kafka
      - websocket-server
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge

volumes:
  kafka-data:
    driver: local
